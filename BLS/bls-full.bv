name := bls
# number of signatures in a batch
N := 100
setting := symmetric

# types for variables used in verification.
# all other variable types are inferred by SDL parser
BEGIN :: types
 M := Str
END :: types

# description of key generation and signing algorithms
BEGIN :: func:keygen
input := None
 g := random(G1)
 x := random(ZR)
 pk := g^x
 sk := x
output := list{pk, sk, g}
END :: func:keygen

BEGIN :: func:sign
input := list{sk, M}
preSig := H(M, G1)
sig := preSig ^ sk
output := sig
END :: func:sign

BEGIN :: func:verify
input := list{pk, M, sig, g}
h := H(M, G1)
output := (e(h, pk) == e(sig, g))
END :: func:verify

constant := list{g}
generator := list{g}
public :=  pk
signature :=  sig
message :=  h

# single signer
BEGIN :: count
message_count := N
public_count := one
signature_count := N
END :: count

# variables computed before each signature verification
BEGIN :: precompute
  h := H(M, G1)
END :: precompute

# individual verification check
verify := {e(h, pk) == e(sig, g)}
